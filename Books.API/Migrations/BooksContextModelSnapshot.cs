// <auto-generated />
using System;
using Books.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.API.Migrations
{
    [DbContext(typeof(BooksContext))]
    partial class BooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.API.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("681b93e7-9c12-4abb-83bd-8f686717f31a"),
                            FirstName = "George",
                            LastName = "Martin"
                        },
                        new
                        {
                            Id = new Guid("03634c2d-5279-4dc1-8a92-b32d33408778"),
                            FirstName = "Stephen",
                            LastName = "Fry"
                        },
                        new
                        {
                            Id = new Guid("aa675ba5-f906-45e1-9d2d-b1293ff82f3e"),
                            FirstName = "James",
                            LastName = "Elroy"
                        },
                        new
                        {
                            Id = new Guid("be59b3c4-d918-46df-a7cd-17db5b68a0b2"),
                            FirstName = "Douglas",
                            LastName = "Adams"
                        });
                });

            modelBuilder.Entity("Books.API.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e49ba68c-8c1d-479e-bb6c-de9fab807bde"),
                            AuthorId = new Guid("681b93e7-9c12-4abb-83bd-8f686717f31a"),
                            Description = "The book that seems impossible to write",
                            Title = "The Winds of Winter"
                        },
                        new
                        {
                            Id = new Guid("49174169-e8e6-4955-aaca-23547750bcc3"),
                            AuthorId = new Guid("03634c2d-5279-4dc1-8a92-b32d33408778"),
                            Description = "A Game of Thrones is the first novel...",
                            Title = "A Game of Thrones"
                        },
                        new
                        {
                            Id = new Guid("2d3e6f72-1ae4-4159-865a-77e5abc259f3"),
                            AuthorId = new Guid("aa675ba5-f906-45e1-9d2d-b1293ff82f3e"),
                            Description = "The Greeks myths are amongst the best stories ever told...",
                            Title = "Mythos"
                        });
                });

            modelBuilder.Entity("Books.API.Entities.Book", b =>
                {
                    b.HasOne("Books.API.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
